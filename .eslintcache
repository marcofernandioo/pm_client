[{"C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\index.js":"1","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\App.js":"2","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Input.js":"3","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Router.js":"4","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Pricelist.js":"5","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\api\\index.js":"6","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Navigations.js":"7","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Orderlist.js":"8","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\EditProduct.js":"9","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\AddProduct.js":"10","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Sales.js":"11"},{"size":590,"mtime":1611040580563,"results":"12","hashOfConfig":"13"},{"size":410,"mtime":1611134186185,"results":"14","hashOfConfig":"13"},{"size":11930,"mtime":1611342303283,"results":"15","hashOfConfig":"13"},{"size":320,"mtime":1610990956266,"results":"16","hashOfConfig":"13"},{"size":4599,"mtime":1611228060493,"results":"17","hashOfConfig":"13"},{"size":2421,"mtime":1611340014243,"results":"18","hashOfConfig":"13"},{"size":6209,"mtime":1611155706973,"results":"19","hashOfConfig":"13"},{"size":7145,"mtime":1611341557431,"results":"20","hashOfConfig":"13"},{"size":5383,"mtime":1611227710773,"results":"21","hashOfConfig":"13"},{"size":5129,"mtime":1611227759805,"results":"22","hashOfConfig":"13"},{"size":147,"mtime":1611134643896,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1oqul5q",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\index.js",["53","54"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Routes from './components/Router'\nimport Pricelist from './components/Pricelist'\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["55","56"],"C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\App.js",["57"],"import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Input from './components/Input.js';\nimport Navigations from './components/Navigations';\n\nfunction App() {\n  return (\n    <>\n      <h1>Pasar Medan</h1>\n      {/* <Input /> */}\n      {/* <Navigations /> */}\n      <Switch>\n        <Route path = '/' component = {Navigations} />\n      </Switch>\n    </>\n  )\n}\n\nexport default App;\n","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Input.js",["58","59","60","61","62"],"C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Router.js",[],"C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Pricelist.js",["63","64","65"],"import React, {useState, useEffect} from 'react';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport Button from '@material-ui/core/Button'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport {getPricelist, deleteProduct, editProduct} from '../api';\r\n\r\nexport default function Pricelist () {\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [id, setId] = useState({});\r\n\r\n    const columns = [\r\n        // {\r\n        //     name: 'category', \r\n        //     label: ' ', \r\n        //     options: {}\r\n        // }, \r\n        {\r\n\r\n            name: 'name', \r\n            label: 'Produk', \r\n            options: {}\r\n        }, \r\n        {\r\n            name: 'price', \r\n            label: 'Harga Jual', \r\n            options: {}\r\n        }, \r\n        {\r\n            name: '_id', \r\n            label: ' ', \r\n            options: {\r\n                filter: false, \r\n                sort: false, \r\n                customBodyRender: (id) => {\r\n                    return (\r\n                        <div>\r\n                            <Tooltip title = \"Edit Product\">\r\n                                <IconButton>\r\n                                    <EditIcon onClick = {() => redirectToEditProduct(id)}/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title = \"Delete Product\">\r\n                                <IconButton>\r\n                                    <DeleteIcon onClick = {() => handleClickOpen(id)}/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n    ]\r\n\r\n    const options = {\r\n        filterType: 'checkbox'\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPricelist();\r\n    }, [products]);\r\n\r\n    const loadPricelist = () => {\r\n        getPricelist()\r\n        .then(res => {\r\n            if (res.data.status == 'ok') setProducts(res.data.list);\r\n            else alert(res.data.msg);\r\n        })\r\n        .catch(err => console.log('Coba ulangi kembali'));\r\n    }\r\n\r\n    const redirectToEditProduct = (id) => {\r\n        window.location.href = '/edit/'+id\r\n    }\r\n\r\n    const onDeleteProduct = (id) => {\r\n        deleteProduct(id)\r\n        .then((res) => {\r\n            // console.log(res);\r\n            if (res.data.status == 'ok') setOpen(false);\r\n            else alert(res.data.msg);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const handleClickOpen = (id) => {\r\n        setId(id);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                style = {{marginBottom: '10px'}}\r\n                variant = \"contained\" \r\n                color = \"primary\"\r\n                onClick = {() => window.location.href = '/add'}\r\n            >\r\n                Tambahkan produk\r\n            </Button>\r\n            <MUIDataTable \r\n                title = \"Pricelist\"\r\n                data = {products}\r\n                columns = {columns}\r\n                options = {options}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Hapus Produk Ini?\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Produk yang dihapus tidak dapat dibalikkan kembali.\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Kembali\r\n                </Button>\r\n                <Button onClick={() => onDeleteProduct(id)} color=\"primary\" autoFocus>\r\n                    Hapus\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}           ","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\api\\index.js",["66"],"C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Navigations.js",["67","68"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\nimport Input from './Input';\r\nimport Pricelist from './Pricelist';\r\nimport Sales from './Sales';\r\nimport Orderlist from './Orderlist';\r\nimport EditProduct from './EditProduct';\r\nimport AddProduct from './AddProduct';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Pasar Medan\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick = {() => window.location.href = '/order'} >\r\n              <ListItemIcon><AddIcon/></ListItemIcon>\r\n              <ListItemText primary = {\"Add Order\"} />\r\n          </ListItem>\r\n          <ListItem button onClick = {() => window.location.href = '/'} >\r\n              <ListItemIcon><FormatListBulletedIcon/></ListItemIcon>\r\n              <ListItemText primary = {\"Orderlist\"} />\r\n          </ListItem>\r\n          <ListItem button onClick = {() => window.location.href = '/pricelist'} >\r\n              <ListItemIcon><MenuBookIcon/></ListItemIcon>\r\n              <ListItemText primary = {\"Pricelist\"} />\r\n          </ListItem>\r\n          <ListItem button onClick = {() => window.location.href = '/sales'} >\r\n              <ListItemIcon><EqualizerIcon/></ListItemIcon>\r\n              <ListItemText primary = {\"Sales\"} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Switch>\r\n            \r\n            <Route path = '/pricelist' component = {Pricelist} />\r\n            <Route path = '/order' component = {Input} />\r\n            <Route path = '/sales' component = {Sales} />\r\n            <Route path = '/edit/:id' component = {EditProduct} />\r\n            <Route path = '/add' component = {AddProduct} />\r\n            <Route exact path = '/' component = {Orderlist} />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Orderlist.js",["69","70"],"C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\EditProduct.js",["71","72","73"],"import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport {getProduct, editProduct} from '../api';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    columnData: {\r\n        width: '600px'\r\n    }, \r\n    columnName: {\r\n        width: '200px'\r\n    },\r\n    rowContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',   \r\n        width: '100%'\r\n    }, \r\n    grid: {\r\n        marginLeft: '20px'\r\n    }, \r\n    myCard: {\r\n        width: '100%',  \r\n    }, \r\n    myButton: {\r\n        backgroundColor: '#00cccc', \r\n        color: '#ffffff'\r\n    }, \r\n    textField: {\r\n        marginTop: '10px',   \r\n        marginBottom: '10px'\r\n    }, \r\n    root: {\r\n        flexDirection: 'column',   \r\n        justifyContent: 'flex-start', \r\n        alignItems: 'flex-start', \r\n        height: '100vh', \r\n        width: '900px', \r\n        marginLeft: '80px', \r\n        marginTop: '80px'\r\n    }\r\n}))\r\n\r\nexport default function EditProduct () {\r\n    const [name, setName] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n\r\n    let {id} = useParams();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getProduct(id)\r\n        .then((res) => {\r\n            if (res.data.status == 'ok') {\r\n                setName(res.data.product.name);\r\n                setCategory(res.data.product.category);\r\n                setPrice(res.data.product.price);\r\n            }\r\n            else alert(res.data.msg);\r\n            \r\n        })\r\n        .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    const submitEditProduct = () => {\r\n        editProduct(id,name,category,price)\r\n        .then((res) => {\r\n            if (res.data.status == 'ok') {\r\n                window.location.href = '/pricelist';\r\n                alert(res.data.msg);\r\n            } else alert(res.data.msg);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid>\r\n                        <h2>UBAH PRODUK</h2>\r\n                        <div className = {classes.rowContainer}>\r\n                            <div className = {classes.columnName}>Nama Buah</div>\r\n                            <div className = {classes.columnData}> \r\n                                <TextField \r\n                                    type = \"text\" \r\n                                    variant = \"outlined\" \r\n                                    fullWidth \r\n                                    className = {classes.textField} \r\n                                    value = {name}\r\n                                    onChange = {(e) => setName(e.target.value)}\r\n                                    \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className = {classes.rowContainer}>\r\n                            <div className = {classes.columnName}>Jenis Buah</div>\r\n                            <div className = {classes.columnData}> \r\n                                <TextField \r\n                                    type = \"text\" \r\n                                    variant = \"outlined\" \r\n                                    fullWidth \r\n                                    className = {classes.textField} \r\n                                    onChange = {(e) => setCategory(e.target.value)}\r\n                                    value = {category}\r\n                                />\r\n                            </div>\r\n                        </div> */}\r\n                        <div className = {classes.rowContainer}>\r\n                            <div className = {classes.columnName}>Harga Jual</div>\r\n                            <div className = {classes.columnData}> \r\n                                <TextField \r\n                                    type = \"number\" \r\n                                    variant = \"outlined\" \r\n                                    fullWidth \r\n                                    className = {classes.textField} \r\n                                    onChange = {(e) => setPrice(e.target.value)}\r\n                                    value = {price}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <Button\r\n                            variant = \"contained\"\r\n                            onClick = {() => window.location.href = '/pricelist'}\r\n                            style = {{marginRight: '20px'}}\r\n                        >\r\n                            kembali\r\n                        </Button>\r\n                        <Button\r\n                            variant = \"contained\"\r\n                            onClick = {submitEditProduct}\r\n                            color = \"secondary\"\r\n                        >\r\n                            ubah\r\n                        </Button>\r\n\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\AddProduct.js",["74","75","76"],"import React, {useState, useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport {addProduct} from '../api';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    columnData: {\r\n        width: '600px'\r\n    }, \r\n    columnName: {\r\n        width: '200px'\r\n    },\r\n    rowContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',   \r\n        width: '100%'\r\n    }, \r\n    grid: {\r\n        marginLeft: '20px'\r\n    }, \r\n    myCard: {\r\n        width: '100%',  \r\n    }, \r\n    myButton: {\r\n        backgroundColor: '#00cccc', \r\n        color: '#ffffff'\r\n    }, \r\n    textField: {\r\n        marginTop: '10px',   \r\n        marginBottom: '10px'\r\n    }, \r\n    root: {\r\n        flexDirection: 'column',   \r\n        justifyContent: 'flex-start', \r\n        alignItems: 'flex-start', \r\n        height: '100vh', \r\n        width: '900px', \r\n        marginLeft: '80px', \r\n        marginTop: '80px'\r\n    }\r\n}))\r\n\r\nexport default function AddProduct () {\r\n    const [name, setName] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [price, setPrice] = useState(1000);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onSubmitProduct = (name, category, price) => {\r\n        addProduct(name, category, price)\r\n        .then((res) => {\r\n            if (res.data.status == 'ok') window.location.href = '/pricelist'\r\n            else alert(res.data.msg);\r\n        })\r\n        .catch((err) => alert('Coba ulangi kembali'))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid>\r\n                        <h2>TAMBAHKAN PRODUK BARU</h2>\r\n                        <div className = {classes.rowContainer}>\r\n                            <div className = {classes.columnName}>Nama Lengkap Buah</div>\r\n                            <div className = {classes.columnData}> \r\n                                <TextField \r\n                                    type = \"text\" \r\n                                    variant = \"outlined\" \r\n                                    fullWidth \r\n                                    className = {classes.textField} \r\n                                    value = {name}\r\n                                    onChange = {(e) => setName(e.target.value)}\r\n                                    placeholder = \"contoh. Mangga Harum Manis\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className = {classes.rowContainer}>\r\n                            <div className = {classes.columnName}>Jenis Buah</div>\r\n                            <div className = {classes.columnData}> \r\n                                <TextField \r\n                                    type = \"text\" \r\n                                    variant = \"outlined\" \r\n                                    fullWidth \r\n                                    className = {classes.textField} \r\n                                    onChange = {(e) => setCategory(e.target.value)}\r\n                                    value = {category}\r\n                                    placeholder = \"contoh: Mangga\"\r\n                                />\r\n                            </div>\r\n                        </div> */}\r\n                        <div className = {classes.rowContainer}>\r\n                            <div className = {classes.columnName}>Harga Jual</div>\r\n                            <div className = {classes.columnData}> \r\n                                <TextField \r\n                                    type = \"number\" \r\n                                    variant = \"outlined\" \r\n                                    fullWidth \r\n                                    className = {classes.textField} \r\n                                    InputProps = {{inputProps: {min: 0}}}\r\n                                    onChange = {(e) => setPrice(e.target.value)}\r\n                                    value = {price}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <Button\r\n                            variant = \"contained\"\r\n                            onClick = {() => window.location.href = '/pricelist'}\r\n                            style = {{marginRight: '20px'}}\r\n                        >\r\n                            kembali\r\n                        </Button>\r\n                        <Button\r\n                            variant = \"contained\"\r\n                            onClick = {() => onSubmitProduct(name, category, price)}\r\n                            color = \"secondary\"\r\n                        >\r\n                            tambah\r\n                        </Button>\r\n\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}","C:\\Users\\Marco Fernandio\\Desktop\\Work\\pasar.medan\\Web\\frontend\\src\\components\\Sales.js",[],{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"77","severity":1,"message":"86","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},{"ruleId":"77","severity":1,"message":"87","line":15,"column":3,"nodeType":"79","messageId":"80","endLine":15,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":76,"column":46,"nodeType":"90","messageId":"91","endLine":76,"endColumn":54,"fix":"92"},{"ruleId":"93","severity":1,"message":"94","line":129,"column":33,"nodeType":"95","messageId":"96","endLine":129,"endColumn":35},{"ruleId":"97","severity":1,"message":"98","line":140,"column":8,"nodeType":"99","endLine":140,"endColumn":10,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"94","line":164,"column":33,"nodeType":"95","messageId":"96","endLine":164,"endColumn":35},{"ruleId":"77","severity":1,"message":"101","line":14,"column":38,"nodeType":"79","messageId":"80","endLine":14,"endColumn":49},{"ruleId":"93","severity":1,"message":"94","line":76,"column":33,"nodeType":"95","messageId":"96","endLine":76,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":90,"column":33,"nodeType":"95","messageId":"96","endLine":90,"endColumn":35},{"ruleId":"77","severity":1,"message":"102","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"77","severity":1,"message":"103","line":18,"column":8,"nodeType":"79","messageId":"80","endLine":18,"endColumn":17},{"ruleId":"77","severity":1,"message":"104","line":19,"column":8,"nodeType":"79","messageId":"80","endLine":19,"endColumn":16},{"ruleId":"77","severity":1,"message":"105","line":17,"column":8,"nodeType":"79","messageId":"80","endLine":17,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":151,"column":29,"nodeType":"95","messageId":"96","endLine":151,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":62,"column":33,"nodeType":"95","messageId":"96","endLine":62,"endColumn":35},{"ruleId":"97","severity":1,"message":"106","line":71,"column":8,"nodeType":"99","endLine":71,"endColumn":10,"suggestions":"107"},{"ruleId":"93","severity":1,"message":"94","line":76,"column":33,"nodeType":"95","messageId":"96","endLine":76,"endColumn":35},{"ruleId":"77","severity":1,"message":"108","line":1,"column":26,"nodeType":"79","messageId":"80","endLine":1,"endColumn":35},{"ruleId":"77","severity":1,"message":"109","line":52,"column":22,"nodeType":"79","messageId":"80","endLine":52,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":60,"column":33,"nodeType":"95","messageId":"96","endLine":60,"endColumn":35},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Pricelist' is defined but never used.","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'Input' is defined but never used.","'KeyboardTimePicker' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"112","text":"113"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'format'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'editProduct' is defined but never used.","'az' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["115"],"'useEffect' is defined but never used.","'setCategory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2148,2148],"()",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [format]",{"range":"120","text":"121"},"Update the dependencies array to be: [id]",{"range":"122","text":"123"},[4164,4166],"[format]",[1949,1951],"[id]"]